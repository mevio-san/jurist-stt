# https://docs.aws.amazon.com/it_it/codepipeline/latest/userguide/ecs-cd-pipeline.html#cd-buildspec

version: 0.2

env:
  secrets-manager:
    SECRET_CONFIG: "arn:aws:secretsmanager:us-east-1:763800460529:secret:jurist-sandbox-stt-V37Z8X"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - echo $CODEBUILD_SOURCE_VERSION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 763800460529.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=763800460529.dkr.ecr.us-east-1.amazonaws.com/jurist-sandbox-stt
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo Save the secrets to a file
      - echo $SECRET_CONFIG > main/config.json
      - cat main/config.json
      - echo Done.
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '{"AWSEBDockerrunVersion":"1","Image":{"Name":"%s","Update":"true"},"Ports":[{"ContainerPort":80,"HostPort":80}]}' $REPOSITORY_URI:$IMAGE_TAG > Dockerrun.aws.json
      - cat Dockerrun.aws.json
artifacts:
  files:
    - '**/*'